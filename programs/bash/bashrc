CDPATH=".:~/Development:~/Development/resources:~"

shopt -s histappend cmdhist lithist

# If shell is interactive, disable START/STOP output control.
# This allows Ctrl-S to trigger i-search.
if [[ $- = *i* ]]; then
  # -ixon : Disable START/STOP output control.
  # This allows Ctrl-S to trigger i-search.
  stty -ixon
fi

unset -v MAILCHECK

HISTTIMEFORMAT='%F %T '
HISTCONTROL=erasedups:ignorespace
HISTSIZE=10000
HISTFILESIZE=20000
HISTIGNORE='jobs:[fb]g:history:gst:tls:fgg'

shopt -s no_empty_cmd_completion

export LESS_TERMCAP_md=$'\e[1;37m' \
       LESS_TERMCAP_me=$'\e[0m' \
       LESS_TERMCAP_us=$'\e[0;36m' \
       LESS_TERMCAP_ue=$'\e[0m' \
       MANPAGER="less -s" \
       GROFF_NO_SGR=1

complete -F _tmux t

ppath() {
  col_bold="\033[30;01m"
  col_reset="\033[39;49;00m"

  printf '%bPATH%b:\n%s\n' "$col_bold" "$col_reset" "${PATH//:/$'\n'}"
}

man() {
    case "$1" in
        vim|vimdiff|view)
            __vim_man "$@"
            ;;
        *)
            __man "$@"
            ;;
    esac
}

# jump to Bash builtin documentation
__man() {
    case "$(type -t "$1")" in
        builtin)
            local pattern="^ *$1"

            if bashdoc_match "${pattern} \+[-[]"; then
                command man bash | less --pattern="${pattern} +[-[]"
            elif bashdoc_match "${pattern}\b"; then
                command man bash | less --pattern="${pattern}[[:>:]]"
            else
                command man bash
            fi
            ;;
        keyword)
            command man bash | less --hilite-search --pattern='^SHELL GRAMMAR$'
            ;;
        *)
            command man "$@"
            ;;
    esac
}

# hacky workaround for vim_configurable's lack of man pages
# https://github.com/NixOS/nixpkgs/issues/24691
__vim_man() {
    local name=$1
    shift
    find $(__vim_configurable_out)/share/man \
        -name "${name}.*" \
        -exec man {} "$@" \;
}
# hacky workaround for vim_configurable's unexposed view/vimdiff outputs
# https://github.com/NixOS/nixpkgs/issues/11442
view() {
    $(__vim_configurable_bin)/view "$@"
}
vimdiff() {
    $(__vim_configurable_bin)/vimdiff "$@"
}
__vim_configurable_bin() {
    echo $(__vim_configurable_out)/bin
}
__vim_configurable_out() {
    awk '/^exec /{print $2}' $(readlink -f $(which vim)) | sed 's,/bin/vim$,,'
}

bashdoc_match() {
    { command man bash | col -b | grep -l "$1" ; } >/dev/null 2>&1
}

fdoc() {
  curl dict://dict.org/d:${1}:foldoc
}

blink() {
  if [ "$cursor_code" = 3 ]; then
    cursor_code=0
  else
    cursor_code=3
  fi
  printf '\e[%i q' $cursor_code
}
